/*
 * decimate.xc
 *
 *  Created on: 23 sep 2018
 *      Author: Mikael Bohman
 */
#include <xs1.h>
#include <xclib.h>
#include "decimate.h"


static int h_hi[BLOCKS/2][SIZE];
static int h_lo[BLOCKS/2][SIZE];

//const int h[FIRLEN]={-7038, 2756, 2474, 2351, 2351, 2448, 2623, 2864, 3162, 3511, 3907, 4350, 4838, 5371, 5950, 6576, 7251, 7977, 8755, 9588, 10479, 11429, 12442, 13521, 14668, 15886, 17178, 18548, 19999, 21534, 23157, 24871, 26679, 28586, 30595, 32710, 34935, 37274, 39731, 42310, 45016, 47852, 50823, 53934, 57190, 60594, 64151, 67867, 71746, 75793, 80013, 84411, 88992, 93761, 98724, 103885, 109250, 114825, 120614, 126624, 132859, 139325, 146028, 152974, 160167, 167614, 175321, 183292, 191534, 200052, 208853, 217941, 227322, 237003, 246989, 257285, 267897, 278831, 290093, 301688, 313621, 325898, 338525, 351506, 364848, 378555, 392633, 407087, 421921, 437142, 452752, 468759, 485165, 501976, 519196, 536830, 554881, 573354, 592252, 611581, 631342, 651540, 672178, 693260, 714788, 736765, 759194, 782077, 805417, 829216, 853476, 878199, 903385, 929037, 955156, 981741, 1008795, 1036318, 1064309, 1092768, 1121696, 1151092, 1180955, 1211284, 1242077, 1273333, 1305051, 1337228, 1369862, 1402949, 1436488, 1470475, 1504907, 1539779, 1575088, 1610829, 1646999, 1683591, 1720600, 1758022, 1795850, 1834078, 1872700, 1911710, 1951099, 1990862, 2030990, 2071475, 2112310, 2153486, 2194994, 2236825, 2278970, 2321419, 2364163, 2407192, 2450494, 2494059, 2537877, 2581935, 2626223, 2670729, 2715441, 2760346, 2805433, 2850687, 2896097, 2941649, 2987330, 3033126, 3079023, 3125007, 3171064, 3217180, 3263339, 3309528, 3355730, 3401931, 3448116, 3494269, 3540374, 3586416, 3632379, 3678247, 3724003, 3769633, 3815118, 3860444, 3905593, 3950549, 3995296, 4039817, 4084095, 4128114, 4171857, 4215307, 4258448, 4301263, 4343735, 4385849, 4427586, 4468931, 4509868, 4550380, 4590450, 4630063, 4669203, 4707853, 4745998, 4783622, 4820709, 4857245, 4893213, 4928599, 4963388, 4997566, 5031117, 5064028, 5096284, 5127873, 5158779, 5188990, 5218493, 5247275, 5275324, 5302627, 5329172, 5354948, 5379944, 5404148, 5427549, 5450138, 5471905, 5492839, 5512932, 5532174, 5550557, 5568073, 5584713, 5600471, 5615339, 5629311, 5642380, 5654540, 5665787, 5676114, 5685517, 5693992, 5701535, 5708143, 5713812, 5718541, 5722326, 5725166, 5727061, 5728008, 5728008, 5727061, 5725166, 5722326, 5718541, 5713812, 5708143, 5701535, 5693992, 5685517, 5676114, 5665787, 5654540, 5642380, 5629311, 5615339, 5600471, 5584713, 5568073, 5550557, 5532174, 5512932, 5492839, 5471905, 5450138, 5427549, 5404148, 5379944, 5354948, 5329172, 5302627, 5275324, 5247275, 5218493, 5188990, 5158779, 5127873, 5096284, 5064028, 5031117, 4997566, 4963388, 4928599, 4893213, 4857245, 4820709, 4783622, 4745998, 4707853, 4669203, 4630063, 4590450, 4550380, 4509868, 4468931, 4427586, 4385849, 4343735, 4301263, 4258448, 4215307, 4171857, 4128114, 4084095, 4039817, 3995296, 3950549, 3905593, 3860444, 3815118, 3769633, 3724003, 3678247, 3632379, 3586416, 3540374, 3494269, 3448116, 3401931, 3355730, 3309528, 3263339, 3217180, 3171064, 3125007, 3079023, 3033126, 2987330, 2941649, 2896097, 2850687, 2805433, 2760346, 2715441, 2670729, 2626223, 2581935, 2537877, 2494059, 2450494, 2407192, 2364163, 2321419, 2278970, 2236825, 2194994, 2153486, 2112310, 2071475, 2030990, 1990862, 1951099, 1911710, 1872700, 1834078, 1795850, 1758022, 1720600, 1683591, 1646999, 1610829, 1575088, 1539779, 1504907, 1470475, 1436488, 1402949, 1369862, 1337228, 1305051, 1273333, 1242077, 1211284, 1180955, 1151092, 1121696, 1092768, 1064309, 1036318, 1008795, 981741, 955156, 929037, 903385, 878199, 853476, 829216, 805417, 782077, 759194, 736765, 714788, 693260, 672178, 651540, 631342, 611581, 592252, 573354, 554881, 536830, 519196, 501976, 485165, 468759, 452752, 437142, 421921, 407087, 392633, 378555, 364848, 351506, 338525, 325898, 313621, 301688, 290093, 278831, 267897, 257285, 246989, 237003, 227322, 217941, 208853, 200052, 191534, 183292, 175321, 167614, 160167, 152974, 146028, 139325, 132859, 126624, 120614, 114825, 109250, 103885, 98724, 93761, 88992, 84411, 80013, 75793, 71746, 67867, 64151, 60594, 57190, 53934, 50823, 47852, 45016, 42310, 39731, 37274, 34935, 32710, 30595, 28586, 26679, 24871, 23157, 21534, 19999, 18548, 17178, 15886, 14668, 13521, 12442, 11429, 10479, 9588, 8755, 7977, 7251, 6576, 5950, 5371, 4838, 4350, 3907, 3511, 3162, 2864, 2623, 2448, 2351, 2351, 2474, 2756, -7038};
//const int h[FIRLEN]={1, 3, 6, 10, 15, 21, 28, 36, 45, 55, 66, 78, 91, 105, 120, 136, 153, 171, 190, 210, 231, 253, 276, 300, 325, 351, 378, 406, 435, 465, 496, 528, 561, 595, 630, 666, 703, 741, 780, 820, 861, 903, 946, 990, 1035, 1081, 1128, 1176, 1225, 1275, 1326, 1378, 1431, 1485, 1540, 1596, 1653, 1711, 1770, 1830, 1891, 1953, 2016, 2080, 2142, 2202, 2260, 2316, 2370, 2422, 2472, 2520, 2566, 2610, 2652, 2692, 2730, 2766, 2800, 2832, 2862, 2890, 2916, 2940, 2962, 2982, 3000, 3016, 3030, 3042, 3052, 3060, 3066, 3070, 3072, 3072, 3070, 3066, 3060, 3052, 3042, 3030, 3016, 3000, 2982, 2962, 2940, 2916, 2890, 2862, 2832, 2800, 2766, 2730, 2692, 2652, 2610, 2566, 2520, 2472, 2422, 2370, 2316, 2260, 2202, 2142, 2080, 2016, 1953, 1891, 1830, 1770, 1711, 1653, 1596, 1540, 1485, 1431, 1378, 1326, 1275, 1225, 1176, 1128, 1081, 1035, 990, 946, 903, 861, 820, 780, 741, 703, 666, 630, 595, 561, 528, 496, 465, 435, 406, 378, 351, 325, 300, 276, 253, 231, 210, 190, 171, 153, 136, 120, 105, 91, 78, 66, 55, 45, 36, 28, 21, 15, 10, 6, 3, 1};
const int h[FIRLEN]={1, 3, 6, 10, 15, 21, 28, 36, 45, 55, 66, 78, 91, 105, 120, 136, 153, 171, 190, 210, 231, 253, 276, 300, 325, 351, 378, 406, 435, 465, 496, 528, 561, 595, 630, 666, 703, 741, 780, 820, 861, 903, 946, 990, 1035, 1081, 1128, 1176, 1225, 1275, 1326, 1378, 1431, 1485, 1540, 1596, 1653, 1711, 1770, 1830, 1891, 1953, 2016, 2080, 2145, 2211, 2278, 2346, 2415, 2485, 2556, 2628, 2701, 2775, 2850, 2926, 3003, 3081, 3160, 3240, 3321, 3403, 3486, 3570, 3655, 3741, 3828, 3916, 4005, 4095, 4186, 4278, 4371, 4465, 4560, 4656, 4753, 4851, 4950, 5050, 5151, 5253, 5356, 5460, 5565, 5671, 5778, 5886, 5995, 6105, 6216, 6328, 6441, 6555, 6670, 6786, 6903, 7021, 7140, 7260, 7381, 7503, 7626, 7750, 7875, 8001, 8128, 8256, 8382, 8506, 8628, 8748, 8866, 8982, 9096, 9208, 9318, 9426, 9532, 9636, 9738, 9838, 9936, 10032, 10126, 10218, 10308, 10396, 10482, 10566, 10648, 10728, 10806, 10882, 10956, 11028, 11098, 11166, 11232, 11296, 11358, 11418, 11476, 11532, 11586, 11638, 11688, 11736, 11782, 11826, 11868, 11908, 11946, 11982, 12016, 12048, 12078, 12106, 12132, 12156, 12178, 12198, 12216, 12232, 12246, 12258, 12268, 12276, 12282, 12286, 12288, 12288, 12286, 12282, 12276, 12268, 12258, 12246, 12232, 12216, 12198, 12178, 12156, 12132, 12106, 12078, 12048, 12016, 11982, 11946, 11908, 11868, 11826, 11782, 11736, 11688, 11638, 11586, 11532, 11476, 11418, 11358, 11296, 11232, 11166, 11098, 11028, 10956, 10882, 10806, 10728, 10648, 10566, 10482, 10396, 10308, 10218, 10126, 10032, 9936, 9838, 9738, 9636, 9532, 9426, 9318, 9208, 9096, 8982, 8866, 8748, 8628, 8506, 8382, 8256, 8128, 8001, 7875, 7750, 7626, 7503, 7381, 7260, 7140, 7021, 6903, 6786, 6670, 6555, 6441, 6328, 6216, 6105, 5995, 5886, 5778, 5671, 5565, 5460, 5356, 5253, 5151, 5050, 4950, 4851, 4753, 4656, 4560, 4465, 4371, 4278, 4186, 4095, 4005, 3916, 3828, 3741, 3655, 3570, 3486, 3403, 3321, 3240, 3160, 3081, 3003, 2926, 2850, 2775, 2701, 2628, 2556, 2485, 2415, 2346, 2278, 2211, 2145, 2080, 2016, 1953, 1891, 1830, 1770, 1711, 1653, 1596, 1540, 1485, 1431, 1378, 1326, 1275, 1225, 1176, 1128, 1081, 1035, 990, 946, 903, 861, 820, 780, 741, 703, 666, 630, 595, 561, 528, 496, 465, 435, 406, 378, 351, 325, 300, 276, 253, 231, 210, 190, 171, 153, 136, 120, 105, 91, 78, 66, 55, 45, 36, 28, 21, 15, 10, 6, 3, 1};
//const int h[FIRLEN]={2855, 2013, 2474, 3128, 3912, 4839, 5947, 7206, 8637, 10277, 12169, 14372, 16863, 19623, 22765, 26328, 30315, 34663, 39489, 44893, 50883, 57512, 64756, 72707, 81483, 91092, 101609, 113101, 125569, 138996, 153633, 169523, 186664, 205230, 225233, 246729, 269787, 294518, 321024, 349432, 379849, 412186, 446564, 483320, 522526, 563993, 607924, 654549, 703865, 756031, 811056, 869034, 930153, 994607, 1062381, 1133462, 1208031, 1286186, 1368108, 1453886, 1543573, 1637086, 1734558, 1836082, 1941745, 2051789, 2166139, 2284829, 2407929, 2535425, 2667500, 2804145, 2945231, 3090855, 3241183, 3396151, 3555592, 3719612, 3888170, 4061238, 4238780, 4420701, 4607046, 4797735, 4992646, 5191743, 5394810, 5601716, 5812464, 6026821, 6244591, 6465717, 6690055, 6917406, 7147546, 7380291, 7615399, 7852629, 8091802, 8332624, 8574770, 8817993, 9062107, 9306886, 9551911, 9796841, 10041394, 10285241, 10528068, 10769516, 11009255, 11246894, 11482132, 11714540, 11943782, 12169571, 12391379, 12608803, 12821555, 13029305, 13231629, 13427971, 13618139, 13801802, 13978375, 14147578, 14309061, 14462493, 14607520, 14743746, 14870846, 14988464, 15096232, 15193910, 15281156, 15357779, 15423517, 15477914, 15520771, 15551930, 15571209, 15578303, 15573144, 15555479, 15525212, 15482316, 15426428, 15357592, 15275801, 15180906, 15073015, 14952115, 14818108, 14671168, 14511266, 14338533, 14153152, 13955052, 13744591, 13522078, 13287463, 13040924, 12782913, 12513721, 12233507, 11942618, 11641467, 11330362, 11009686, 10679941, 10341438, 9994656, 9640034, 9277980, 8909112, 8533863, 8152738, 7766230, 7374983, 6979578, 6580422, 6178180, 5773494, 5366801, 4958763, 4549980, 4141052, 3732599, 3325128, 2919399, 2515977, 2115349, 1718121, 1324956, 936368, 552892, 175256, -196014, -560533, -917837, -1267256, -1608219, -1940378, -2263210, -2576321, -2879343, -3171826, -3453401, -3723577, -3982106, -4228687, -4463010, -4684875, -4893934, -5089976, -5272878, -5442404, -5598390, -5740855, -5869710, -5984868, -6086302, -6173880, -6247736, -6307976, -6354517, -6387546, -6407272, -6413764, -6407178, -6387742, -6355737, -6311374, -6254887, -6186587, -6106884, -6016110, -5914513, -5802488, -5680422, -5548746, -5408013, -5258626, -5100812, -4935141, -4762258, -4582487, -4396321, -4204337, -4006954, -3804658, -3598065, -3387767, -3174186, -2957839, -2739229, -2518818, -2297185, -2074845, -1852320, -1630184, -1408820, -1188629, -970139, -753870, -540182, -329548, -122508, 80741, 279836, 474169, 663409, 847352, 1025673, 1198062, 1364238, 1523829, 1676621, 1822482, 1961196, 2092533, 2216313, 2332452, 2440837, 2541330, 2633787, 2718255, 2794733, 2863046, 2923299, 2975584, 3019796, 3056018, 3084294, 3104743, 3117598, 3122928, 3120831, 3111544, 3095219, 3071953, 3042032, 3005647, 2963054, 2914555, 2860257, 2800447, 2735353, 2665317, 2590650, 2511590, 2428553, 2341706, 2251224, 2157522, 2061038, 1962042, 1860680, 1757328, 1652328, 1545887, 1438323, 1330034, 1221297, 1112246, 1003277, 894621, 786542, 679278, 573035, 468193, 364882, 263270, 163728, 66383, -28661, -121167, -210956, -297828, -381764, -462543, -540045, -614184, -684765, -751816, -815238, -874929, -930919, -983154, -1031478, -1075944, -1116719, -1153674, -1186610, -1215747, -1241245, -1262921, -1280934, -1295354, -1306164, -1313559, -1317478, -1318038, -1315443, -1309680, -1300949, -1289433, -1274993, -1257900, -1238289, -1216211, -1191902, -1165381, -1136848, -1106511, -1074502, -1040773, -1005522, -968973, -931214, -892455, -852768, -812275, -771116, -729374, -687188, -644720, -602108, -559524, -516873, -474382, -432293, -390501, -349106, -308275, -268164, -228795, -190116, -152320, -115474, -79586, -44773, -11044, 21531, 52929, 83087, 111977, 139542, 165820, 190889, 214636, 236970, 257894, 277476, 295741, 312633, 328194, 342453, 355414, 367133, 377637, 386906, 394887, 401685, 407397, 411914, 415339, 417800, 419278, 419859, 419573, 418364, 416341, 413528, 409970, 405706, 400696, 395167, 389171, 382579, 375417, 367893, 360037, 351753, 343165, 334290, 325215, 316071, 306699, 297144, 287414, 277522, 267671, 257890, 248188, 238503, 228855, 219209, 209725, 200492, 191398, 182400, 173546, 164928, 156495, 148346, 140326, 132425, 124939, 117802, 110778, 103928, 97419, 91204, 85237, 79514, 74004, 68736, 63727, 59027, 54531, 50334, 46404, 42577, 38961, 35601, 32462, 29539, 26852, 24326, 21930, 19743, 17729, 15914, 14206, 12561, 11075, 9758, 8571, 7444, 6435, 5577, 4808, 4117, 3478, 2904, 2425, 2022, 1725, 1687, 2222, -588};
//const int h[FIRLEN]={3542, 1132, 1312, 1510, 1727, 1966, 2226, 2510, 2820, 3156, 3520, 3914, 4341, 4800, 5296, 5829, 6401, 7015, 7673, 8378, 9131, 9935, 10792, 11706, 12678, 13712, 14811, 15977, 17213, 18523, 19910, 21376, 22926, 24563, 26290, 28112, 30031, 32051, 34177, 36413, 38762, 41228, 43817, 46532, 49377, 52358, 55478, 58743, 62158, 65726, 69453, 73344, 77404, 81638, 86052, 90650, 95438, 100422, 105606, 110997, 116600, 122421, 128465, 134739, 141247, 147996, 154992, 162240, 169748, 177519, 185562, 193881, 202483, 211373, 220559, 230046, 239840, 249947, 260373, 271124, 282207, 293628, 305392, 317505, 329974, 342803, 356000, 369570, 383518, 397850, 412572, 427690, 443208, 459132, 475467, 492219, 509392, 526991, 545021, 563487, 582393, 601744, 621544, 641797, 662507, 683677, 705311, 727414, 749987, 773034, 796558, 820561, 845047, 870016, 895472, 921416, 947849, 974773, 1002189, 1030098, 1058501, 1087397, 1116787, 1146671, 1177048, 1207917, 1239278, 1271129, 1303469, 1336295, 1369606, 1403399, 1437672, 1472420, 1507642, 1543332, 1579488, 1616105, 1653178, 1690702, 1728672, 1767082, 1805926, 1845199, 1884894, 1925003, 1965519, 2006435, 2047743, 2089435, 2131502, 2173935, 2216725, 2259862, 2303338, 2347140, 2391260, 2435686, 2480407, 2525412, 2570689, 2616226, 2662011, 2708031, 2754272, 2800723, 2847370, 2894199, 2941195, 2988345, 3035634, 3083048, 3130571, 3178188, 3225884, 3273643, 3321450, 3369288, 3417140, 3464991, 3512824, 3560622, 3608368, 3656045, 3703636, 3751123, 3798489, 3845716, 3892786, 3939683, 3986387, 4032881, 4079146, 4125166, 4170921, 4216394, 4261566, 4306419, 4350935, 4395097, 4438885, 4482282, 4525270, 4567831, 4609946, 4651599, 4692772, 4733447, 4773607, 4813233, 4852310, 4890821, 4928747, 4966074, 5002783, 5038860, 5074288, 5109051, 5143134, 5176521, 5209198, 5241149, 5272360, 5302817, 5332506, 5361414, 5389526, 5416831, 5443314, 5468966, 5493772, 5517722, 5540805, 5563010, 5584326, 5604743, 5624252, 5642843, 5660509, 5677240, 5693028, 5707866, 5721748, 5734665, 5746613, 5757585, 5767577, 5776583, 5784600, 5791622, 5797648, 5802674, 5806698, 5809717, 5811731, 5812738, 5812738, 5811731, 5809717, 5806698, 5802674, 5797648, 5791622, 5784600, 5776583, 5767577, 5757585, 5746613, 5734665, 5721748, 5707866, 5693028, 5677240, 5660509, 5642843, 5624252, 5604743, 5584326, 5563010, 5540805, 5517722, 5493772, 5468966, 5443314, 5416831, 5389526, 5361414, 5332506, 5302817, 5272360, 5241149, 5209198, 5176521, 5143134, 5109051, 5074288, 5038860, 5002783, 4966074, 4928747, 4890821, 4852310, 4813233, 4773607, 4733447, 4692772, 4651599, 4609946, 4567831, 4525270, 4482282, 4438885, 4395097, 4350935, 4306419, 4261566, 4216394, 4170921, 4125166, 4079146, 4032881, 3986387, 3939683, 3892786, 3845716, 3798489, 3751123, 3703636, 3656045, 3608368, 3560622, 3512824, 3464991, 3417140, 3369288, 3321450, 3273643, 3225884, 3178188, 3130571, 3083048, 3035634, 2988345, 2941195, 2894199, 2847370, 2800723, 2754272, 2708031, 2662011, 2616226, 2570689, 2525412, 2480407, 2435686, 2391260, 2347140, 2303338, 2259862, 2216725, 2173935, 2131502, 2089435, 2047743, 2006435, 1965519, 1925003, 1884894, 1845199, 1805926, 1767082, 1728672, 1690702, 1653178, 1616105, 1579488, 1543332, 1507642, 1472420, 1437672, 1403399, 1369606, 1336295, 1303469, 1271129, 1239278, 1207917, 1177048, 1146671, 1116787, 1087397, 1058501, 1030098, 1002189, 974773, 947849, 921416, 895472, 870016, 845047, 820561, 796558, 773034, 749987, 727414, 705311, 683677, 662507, 641797, 621544, 601744, 582393, 563487, 545021, 526991, 509392, 492219, 475467, 459132, 443208, 427690, 412572, 397850, 383518, 369570, 356000, 342803, 329974, 317505, 305392, 293628, 282207, 271124, 260373, 249947, 239840, 230046, 220559, 211373, 202483, 193881, 185562, 177519, 169748, 162240, 154992, 147996, 141247, 134739, 128465, 122421, 116600, 110997, 105606, 100422, 95438, 90650, 86052, 81638, 77404, 73344, 69453, 65726, 62158, 58743, 55478, 52358, 49377, 46532, 43817, 41228, 38762, 36413, 34177, 32051, 30031, 28112, 26290, 24563, 22926, 21376, 19910, 18523, 17213, 15977, 14811, 13712, 12678, 11706, 10792, 9935, 9131, 8378, 7673, 7015, 6401, 5829, 5296, 4800, 4341, 3914, 3520, 3156, 2820, 2510, 2226, 1966, 1727, 1510, 1312, 1132, 3542};


void init_dec_tb(){
    for(int block=0; block<BLOCKS ; block++){
        //printintln(block);
        int pos = block*WORD_SIZE;
        for(int i=0; i< SIZE ; i++){
            int sum=0;
            for(int k=0; k<WORD_SIZE ; k++){
                if((i>>k)&1 )
                    sum += h[k+pos];
            }
            if(block >= BLOCKS/2)
                h_hi[block-BLOCKS/2][i] = sum;
            else
                h_lo[block][i] = sum;
        }
    }
}

#pragma unsafe arrays
void decimate64(streaming chanend c , in buffered port:32 p , int offset){
#if(FIRLEN == 512)
    set_core_high_priority_on();
#endif
    int write=0;
    int read=1;
    int acc=0;
    int bitpattern[FIFO_INT]={0}; //>= DIRLEN bit2


#define REV  byterev(bitrev(val));
    sinct(c);
    clearbuf(p);
    while(1){
        {int val;
        p :> val; //32 bits
        bitpattern[write] = REV
        write++;
        read = write<<2;
        }


        acc=0;
//#pragma loop unroll
        for(int i = (BLOCKS/2-1); i>=0 ;i-=4){
            read =  (read+4)&(BLOCKS-1);
            char * alias bit_ptr =&(bitpattern ,char[])[read];

            acc += h_hi[i][ *bit_ptr];
            acc += h_hi[i-1][ *(bit_ptr+1)];
            acc += h_hi[i-2][ *(bit_ptr+2)];
            acc += h_hi[i-3][ *(bit_ptr+3)];
         }
        {int val;
        p :> val; //32 bits
        bitpattern[write] = REV ;
        //bitpattern[write+FIFO_INT] = val;
        }
        write++;
        write = write&(FIFO_INT-1);
//#pragma loop unroll
        for(int i = (BLOCKS/2-1); i>=0 ;i -=4){
            read =  (read+4)&(BLOCKS-1);
            char * alias bit_ptr =&(bitpattern ,char[])[read];
            acc += h_lo[i][ *bit_ptr];
            acc += h_lo[i-1][ *(bit_ptr+1)];
            acc += h_lo[i-2][ *(bit_ptr+2)];
            acc += h_lo[i-3][ *(bit_ptr+3)];
         }
        {int val;
        p :> val; //32 bits
        bitpattern[write] = REV
        write++;
        read = write<<2;
        }

        c <: acc - offset;
#ifdef HALFSPEED
//#pragma loop unroll
        for(int i = (BLOCKS/2-1); i>=0 ;i-=4){
            read =  (read+4)&(BLOCKS-1);
            char * alias bit_ptr =&(bitpattern ,char[])[read];

            acc += h_hi[i][ *bit_ptr];
            acc += h_hi[i-1][ *(bit_ptr+1)];
            acc += h_hi[i-2][ *(bit_ptr+2)];
            acc += h_hi[i-3][ *(bit_ptr+3)];
         }
        {int val;
        p :> val; //32 bits
        bitpattern[write] = REV ;
        //bitpattern[write+FIFO_INT] = val;
        }
        write++;
        write = write&(FIFO_INT-1);
//#pragma loop unroll
        for(int i = (BLOCKS/2-1); i>=0 ;i -=4){
            read =  (read+4)&(BLOCKS-1);
            char * alias bit_ptr =&(bitpattern ,char[])[read];
            acc += h_lo[i][ *bit_ptr];
            acc += h_lo[i-1][ *(bit_ptr+1)];
            acc += h_lo[i-2][ *(bit_ptr+2)];
            acc += h_lo[i-3][ *(bit_ptr+3)];
         }
        c <: (acc>>1) - offset;
#endif
    }
}

#pragma unsafe arrays
void CIC(streaming chanend c , in buffered port:32 p){

    int lut[SIZE];
        for(int i=0; i<SIZE ; i++){
            int sum=0;
            for(int k=0; k<WORD_SIZE ; k++)
                if((i>>k)&1)
                    sum ++;
                else
                    sum--;
            lut[i]=sum;
            //printintln(sum);
        }

    int acc1=0 , acc2=0 , acc3=0;
    int diff1=0 , diff2=0 , diff3=0;
    while(1){
        unsigned val;
#pragma loop unroll
        for(int i=0; i<64; i++){
            acc1 = partin(p,1)? acc1+1: acc1-1;

        }
        diff1 = acc1 - diff1;
        //diff2 = diff1 - diff2;
        //diff3 = diff2 - diff3;

        c <: diff1;
    }
}

